
16-09-2020:
===========

	Good Morning to All
	
	framework -> existing => user requirement changes [php,.net,java,python]
	
	
	 
	Django: -> python [flask,bottle]
	
	- webapplication framework
	- easy to create web apps
	- code reuseablility
	- builtin packages and modules
	
	MVC and MVT
	===========
	
	MVC => Model View Controller
	M - Model
	V - View
	C - Controller
	
	Model => Database[table,field,alter][mysql,sqlite3,postgres,monogodb,Nosql]
	
	View => .html[userview],css,jquery
	
	Controller => [logics .php,.java,.py] -> controll all the functions and methods
	
	MVT => Model View Template
	M - Model
	V - View [Controller]
	T - Template
	
	M => Database
	V => Controller [.py][views.py,urls.py]
	T => Template [DTL,.html] [Django Template Language]
	
	Django Installations:
	---------------------
	
	-> cmd 
		-> check python version
			=> python -V
			=> version is displayed [X V-> environement variables => path -> X]
	
	-> pip install django==3.0
		-> check django version
			=> django-admin --version
			
17-09-2020:
===========
	
	Good Morning to All....
	
	-> cmd
		-> python -V
	-> cmd
		-> any location django installation
			-> pip install django [latest version]
			-> pip install django==3.0
		-> django installation check
			-> django-admin --version

		-> python
		-> >>> import django
		-> >>> django.get__version__ 
	
	Django Project creation
	=======================
	
	-> drive select
		-> sip-6 => cmd
			-> django-admin startproject "projectname" [syntax]
			
			-> django-admin startproject apssdc
		sip-6/apssdc
			/ apssdc [ folder ] [Admin app]
			/ manage.py [python file] first
			/ db.sqlite3
	-> Manage.py
		-> manage.py startapp "appname"
		-> manage.py runserver
		-> manage.py makemigrations
		-> manage.py migrate
		-> manage.py shell  
	-> apssdc[Admin app]
		-> init -> python interpreter
		-> asgi -> asynchronous gateway interface -> deployement
		-> settings -> css,image,.html,mail,app,database[sqlite3]
		-> urls -> url existing -> display -> X[errors]
		-> wsgi -> web socket gateway interface -> deployment
	
	Running Server:
	===============
	-> first select manage.py path location
	-> open the path in cmd
		-> manage.py runserver
		-> python manage.py runserver
		
		-> http://127.0.0.1/8000/
		-> localhost <=> 127.0.0.1
		-> 8000 => django-port[default port]
		
		=> manage.py runserver 1234
		                       9999
	
	=> manage.py services
		
	Userapp creation:
	================
	-> cmd => manage.py
	-> Have to stop server stop
	-> manage.py startapp "appname" [syntax]
	-> manage.py startapp demo
	-> python manage.py startapp demo
	
	Userapp files:
	==============
	=> migrations[database]
	-> init -> python
	-> admin -> table access
	-> apps -> configurations
	-> models -> database => tables,fields,alter
	-> tests -> testing => deployment => unit
	-> views -> Controller [Logic => function -> ?]
	
	Userapp configurations:
	======================
	
	-> settings => Installed_apps => register
	
	-> urls => first file [x]
		
		=> path('pathname',module.functionname,name="userdefined name"),
	
	=> url => views => browser
	
	
	
18-09-2020:
===========
	
	Good Morning to All.....
	
	url:  => localhost:8000/ramu/
	
		  Hi welcome ramu => browser
		  
	url: => path('<str:name>/',views.prntname),
	views:
		=> def prntname(req,name):
				return HttpResponse("Hi welcome {}".format(name))
	
	% print("%d and %d"%(a,b))
	+ print(a+" and "+b)
	. print("{1} and {0}".format(a,b))
	
	url: http://localhost:8000/naresh/23/
	
		Hi welcome naresh and your roll number is 23
	
	url: => path('<str:name>/<int:rl>/',views.prntnrl),
	views:
		=> def prntnrl(req,rl,name):
				return HttpResponse("Hi welcome {} and your roll numeber is: {}".format(name,rl))
				
				
19-09-2020:
===========
	Good Morning to All....

	url -> views -> browser(response[html,css,javascript])
	
	.html -> template
	
	templates -> folder -> [userapp]
	
		demo -> login.html
		sample -> login.html
		
	views:
	render(request,'path of .html',{})
	
	url -> views -> .html[templates]
	
	url: localhost:8000/rajesh
		 
		 Hi welcome rajesh
		 
	views -> templates
	
		dictionary -> DTL[Django Template Language]
	DTL:
	===
	
	Variable -> {{a}}
	conditional statements:
	-----------------------
	
	{% if condition %}
		//stmnt
	{% endif %}
	
	{% if condition %}
		//stmnt-1
	{% else %}
		//stmnt-2
	{% endif%}
	
	{% if condition %}
		//stmnt-1
	{% elif condition %}
		//stmnt-2
	{% else %}
		//stmnt-3
	{% endif%}
	
	Iterations: [dictionary]
	-------------
	{% for iterationvariable in iterator %}
		//stmnts
		//iterationvariable
	{% endfor %}
	
	static:
	-------
	css,js,images
	
	CSS => Cascading Style sheet:
	----------------------------
	- colors,font
	- property:value
	=> Inline -> inner of tag
		Syntax:
			<h1 style="color:red;font-size:12px">Hi</h1>
	=> Internal -> inner of head tag but we need to use style tag
		Syntax:
		<head>
		<style>
		h3
		{
			background-color:green;
			font-size:23px;
		}
		</style>
		</head>
		
		<h3>This is sample</h3>
	=> External -> seperate .css [style]
		Syntax:
		<head>
		<link rel="stylesheet" href="css/first.css">
		</head>
	=> h3 -> id -> #,class -> .,
	
	-> demo -> static[css,images,js]
				-> css
					-> demo.css
				-> js
					-> sample.js
				-> images
					-> logo.png
	=> .html
		=> {% load static %}
		=> <link rel="stylesheet" href="{% static 'css/sample.css' %}">
		
24-09-2020:
===========

	Good Morning to All...
	
	url -> views -> templates
		   views <-	
		   views -> templates
	
	project:
	
	sample
		sample -> adminapp(settings,urls)
		rah -> userapp(urls,views,templates,static)
		manage.py
		
		Admin -> ?
		roles -> ?
		
		ORM
	
	
30-09-2020:
==========
	
	Good Morning to All....
	
	url -> views -> (response)
	url -> views -> templates(.html)
	url -> views -> templates(reg) -> views -> templates(welcome)
	url -> views -> templates(re) -> views -> models -> templates
	url -> views -> templates(re) -> views -> forms -> models   		
								  -> views -> models -> html
	
	
Messages:
=========
	
	alert -> update (20% warning)
	
	update
	delete
	user login -> views
	
	success
	warning 
	debug
	info
	
from django.contrib import messages


	messages.success(request,"data to be displayed to user")
	
	
html:
=====
	{% if messages %}
	{% for e in messages %}
	<div class="alert alert-{{e.tags}}">
	{{e}}
	</div>
	{% endfor %}
	{% endif %}

Mail sending:
=============

	sender => 500 mails per/day
	receiver
	
	python -> 1 -> 500
			  2 -> 501 -> 500
			  3 -> 
	
	open your gmails
	Account -> security -> less secure app -> on
	
	 
	settings.py
	-----------
	EMAIL_USE_TLS = True
	EMAIL_HOST = 'smtp.gmail.com'
	EMAIL_PORT = 587
	EMAIL_HOST_USER = 'apssdcfdp4@gmail.com'
	EMAIL_HOST_PASSWORD = ''
	
	
	views.py:
	---------
	from django.core.mail import send_mail
	from adminappname import settings
	
	sendmail(sb,msg,df,[snd])
	
	
	
01-10-2020:
===========
	
	Good Morning to All....
	
	
	DTL: {% %}
	-----
	
	variable -> {{variablename}}
	conditional statemnts,loop,dictionary.fieldname,
	static,
	include -> .html
	extends -> first .html
	
	User Authentication and Authorization:
	--------------------------------------
	
	roles,permissions,actions,
	model,default
	
	Model -> class -> table -> fields
	forms -> views -> .html
	
	Models -> X
	
	own Model -> migrations -> migrate
	
	existing model -> migrate
	
	Widgets:
	--------
	Bootstrap -> existing model -> fields
	
	
	Registration -> Login -> username,password 





